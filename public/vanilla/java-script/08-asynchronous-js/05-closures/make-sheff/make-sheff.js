// import { setupExercise } from "../../../../scripts/vanilla-exercise-handler.js";

// const { kMaxLength } = require("buffer");

// setupExercise({
//   fileKey: "08-asynchronous-js",
//   exerciseName: "Make Sheff",
//   statement:
//     "Write a function 'MakeCheff' with a parameter name that returns a function 'MakeDish' with a parameter dish so that when 'MakeCheff' is called, the console will display the string '{name} cooks {dish}'",
// });

// ! –†—ñ—à–µ–Ω–Ω—è ----------
// function makeSheff(name) {
//   function makeDish(dish) {
//     console.log(`${name} cooks ${dish}`);
//   }
//   return makeDish;
// }

// const robert = makeSheff("Robert");
// const zlatan = makeSheff("Zlatan");

// robert("spaghetti");
// zlatan("soup");

// ?---- –ø—Ä–∞–∫—Ç–∏—á–Ω—ñ –ø—Ä–∏–∫–ª–∞–¥–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∑–∞–º–∏–∫–∞–Ω—å ---------

// 1. –Ü–Ω–∫–∞–ø—Å—É–ª—è—Ü—ñ—è –ø—Ä–∏–≤–∞—Ç–Ω–∏—Ö –∑–º—ñ–Ω–Ω–∏—Ö
// function createCounter() {
//   let count = 0;
//   return {
//     increment() {
//       count++;
//       return count;
//     },
//     decrement() {
//       count--;
//       return count;
//     }
//   };
// }

// const counter = createCounter();
// console.log(counter.increment());
// console.log(counter.decrement()); // 0

// count –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π –∑–∑–æ–≤–Ω—ñ ‚Äî —Ü–µ –ø—Ä–∏–≤–∞—Ç–Ω–∞ –∑–º—ñ–Ω–Ω–∞, –∑–∞—Ö–∏—â–µ–Ω–∞ –∑–∞–º–∏–∫–∞–Ω–Ω—è–º.

// üéõÔ∏è 2. –§–∞–±—Ä–∏–∫–∏ —Ñ—É–Ω–∫—Ü—ñ–π –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
// function makeMultiplier(factor) {
//   return function (number) {
//     return number * factor;
//   };
// }

// const double = makeMultiplier(2);
// const triple = makeMultiplier(3);

// console.log(double(5)); // 10
// console.log(triple(5)); // 15

// –ö–æ–∂–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –ø–∞–º‚Äô—è—Ç–∞—î —Å–≤—ñ–π factor, –Ω–∞–≤—ñ—Ç—å –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è makeMultiplier.

// üß† 3. –ú–µ–º–æ—ñ–∑–∞—Ü—ñ—è (–∫–µ—à—É–≤–∞–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤)
// function memoize(fn) {
//   const cache = {};

//   return function (key) {
//     if (cache[key]) return cache[key];
//     const result = fn(key);
//     cache[key] = result;
//     return result;
//   };
// }

// const slowSquare = memoize((x) => x * x);
// console.log(slowSquare(4)); // 16 (–æ–±—á–∏—Å–ª—é—î—Ç—å—Å—è)
// console.log(slowSquare(4)); // 16 (–∑ –∫–µ—à—É)

// cache –∂–∏–≤–µ –≤ –∑–∞–º–∏–∫–∞–Ω–Ω—ñ ‚Äî —ñ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π –∑–∑–æ–≤–Ω—ñ.

// ‚è±Ô∏è 4. –¢–∞–π–º–µ—Ä–∏ —Ç–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó
// function delayedLogger(message, delay) {
//   setTimeout(function () {
//     console.log(message);
//   }, delay);
// }

// delayedLogger("–ü—Ä–∏–≤—ñ—Ç —ñ–∑ –º–∞–π–±—É—Ç–Ω—å–æ–≥–æ!", 1000);

// –§—É–Ω–∫—Ü—ñ—è –≤ setTimeout –∑–∞–º–∏–∫–∞—î message, –Ω–∞–≤—ñ—Ç—å —è–∫—â–æ delayedLogger –≤–∂–µ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—è.

// üß© 5. –û–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
// function setupButton(id, label) {
//   const button = document.getElementById(id);
//   button.addEventListener("click", function () {
//     console.log(`Clicked: ${label}`);
//   });
// }

// setupButton("saveBtn", "–ó–±–µ—Ä–µ–≥—Ç–∏");
// setupButton("cancelBtn", "–°–∫–∞—Å—É–≤–∞—Ç–∏");

// –ö–æ–∂–µ–Ω –æ–±—Ä–æ–±–Ω–∏–∫ –ø–∞–º‚Äô—è—Ç–∞—î —Å–≤—ñ–π label, –Ω–∞–≤—ñ—Ç—å —è–∫—â–æ setupButton –≤–∏–∫–ª–∏–∫–∞–Ω–æ –¥–∞–≤–Ω–æ.

// üß™ 6. –Ü–º—ñ—Ç–∞—Ü—ñ—è –ø—Ä–∏–≤–∞—Ç–Ω–∏—Ö –∫–ª–∞—Å—ñ–≤ –¥–æ ES6
// function SecretHolder(secret) {
//   return {
//     reveal() {
//       return secret;
//     }
//   };
// }

// const vault = SecretHolder("üîê –°–µ–∫—Ä–µ—Ç–Ω–∏–π –∫–æ–¥");
// console.log(vault.reveal()); // üîê –°–µ–∫—Ä–µ—Ç–Ω–∏–π –∫–æ–¥

// –î–æ –ø–æ—è–≤–∏ #private –≤ –∫–ª–∞—Å–∞—Ö, –∑–∞–º–∏–∫–∞–Ω–Ω—è –±—É–ª–∏ —î–¥–∏–Ω–∏–º —Å–ø–æ—Å–æ–±–æ–º –∑—Ä–æ–±–∏—Ç–∏ –∑–º—ñ–Ω–Ω—ñ –ø—Ä–∏–≤–∞—Ç–Ω–∏–º–∏.

// üß† –•–æ—á–µ—à –±—ñ–ª—å—à–µ?
// –ú–æ–∂—É –ø–æ–∫–∞–∑–∞—Ç–∏, —è–∫ –∑–∞–º–∏–∫–∞–Ω–Ω—è –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è –≤ React (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, —É —Ö—É–∫–∞—Ö), –∞–±–æ —è–∫ –≤–æ–Ω–∏ –ª–µ–∂–∞—Ç—å –≤ –æ—Å–Ω–æ–≤—ñ middleware —É Next.js. –ê–±–æ –Ω–∞–≤—ñ—Ç—å —Å—Ç–≤–æ—Ä–∏—Ç–∏ –≤–ª–∞—Å–Ω—É –º—ñ–Ω—ñ-–±—ñ–±–ª—ñ–æ—Ç–µ–∫—É –∑ –∑–∞–º–∏–∫–∞–Ω–Ω—è–º –¥–ª—è –∫–µ—Ä—É–≤–∞–Ω–Ω—è —Å—Ç–∞–Ω–æ–º.
// –¢–∏ —Ö–æ—á–µ—à –ø—Ä–∏–∫–ª–∞–¥, —è–∫–∏–π –±–ª–∏–∂—á–µ –¥–æ —Ç–≤–æ—ó—Ö –ø—Ä–æ—î–∫—Ç—ñ–≤ ‚Äî —Å–∫–∞–∂—ñ–º–æ, –ª–æ–∫–∞–ª—ñ–∑–∞—Ü—ñ—è, —Ä–æ—É—Ç–∏–Ω–≥ —á–∏ –æ–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫?

// const scores = {};
// const player = "Andriy";
// scores[player] = 100
// console.log(scores)

// function validateUser(isAdmin) {
//   if (isAdmin === "Valeriy") {
//     const secretKey = "ABC123";
//     console.log(secretKey); // ‚úÖ –ø—Ä–∞—Ü—é—î
//   }
//   // console.log(secretKey); // ‚ùå ReferenceError: Cannot access 'secretKey'
// }
// validateUser("Valeriy")
