

const socket = new WebSocket("ws://localhost:8080");
const log = document.getElementById("log");
const typingInput = document.getElementById("typing");
const timerDisplay = document.getElementById("timer");

let startTime = null;
let timerInterval = null;

// WebSocket events
socket.onopen = () => {
  log.innerHTML += "‚úÖ Connected to server<br>";
};

socket.onmessage = (event) => {
  log.innerHTML += `üì® Message: ${event.data}<br>`;
};

socket.onerror = (err) => {
  log.innerHTML += `‚ùå Error: ${err.message}<br>`;
};

socket.onclose = () => {
  log.innerHTML += `üîå Disconnected from server<br>`;
};

document.getElementById("send").onclick = () => {
  if (socket.readyState === WebSocket.OPEN) {
    socket.send("Hello from client");
  }
};

// –¢–∞–π–º–µ—Ä ‚Äî –∑–∞–ø—É—Å–∫ –ø—Ä–∏ –ø–µ—Ä—à–æ–º—É –≤–≤–µ–¥–µ–Ω–Ω—ñ
typingInput.addEventListener("keydown", () => {
  if (startTime !== null) return; // –≤–∂–µ –∑–∞–ø—É—â–µ–Ω–æ

  startTime = performance.now();

  timerInterval = setInterval(() => {
    const elapsed = (performance.now() - startTime) / 1000;
    timerDisplay.textContent = elapsed.toFixed(3);
  }, 10);
});

// –¢–∞–π–º–µ—Ä ‚Äî –∑—É–ø–∏–Ω–∫–∞ –ø—Ä–∏ –∫–ª—ñ–∫—É –≤ –±—É–¥—å-—è–∫–µ –º—ñ—Å—Ü–µ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
document.body.addEventListener("click", () => {
  if (startTime === null) return; // —â–µ –Ω–µ –ø–æ—á–∞–ª–æ—Å—è

  clearInterval(timerInterval);
  const total = (performance.now() - startTime) / 1000;
  timerDisplay.textContent = total.toFixed(3);
  log.innerHTML += `‚èπ –ó—É–ø–∏–Ω–µ–Ω–æ —Ç–∞–π–º–µ—Ä: ${total.toFixed(3)} —Å<br>`;

  // –º–æ–∂–Ω–∞ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä
  if (socket.readyState === WebSocket.OPEN) {
    socket.send(`–¢–∞–π–º–µ—Ä: ${total.toFixed(3)} —Å`);
  }

  // —Å–∫–∏–¥–∞—î–º–æ
  startTime = null;
});
